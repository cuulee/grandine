// Code generated by protoc-gen-go.
// source: fileformat.proto
// DO NOT EDIT!

/*
Package fileformat is a generated protocol buffer package.

It is generated from these files:
	fileformat.proto

It has these top-level messages:
	Body
	Meta
	Feature
	Tag
*/
package fileformat

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Feature_GeomType int32

const (
	Feature_UNKNOWN Feature_GeomType = 0
	Feature_POINT   Feature_GeomType = 1
	Feature_LINE    Feature_GeomType = 2
	Feature_POLYGON Feature_GeomType = 3
)

var Feature_GeomType_name = map[int32]string{
	0: "UNKNOWN",
	1: "POINT",
	2: "LINE",
	3: "POLYGON",
}
var Feature_GeomType_value = map[string]int32{
	"UNKNOWN": 0,
	"POINT":   1,
	"LINE":    2,
	"POLYGON": 3,
}

func (x Feature_GeomType) String() string {
	return proto.EnumName(Feature_GeomType_name, int32(x))
}
func (Feature_GeomType) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{2, 0} }

type Feature_GeomSerialization int32

const (
	Feature_WKB Feature_GeomSerialization = 0
)

var Feature_GeomSerialization_name = map[int32]string{
	0: "WKB",
}
var Feature_GeomSerialization_value = map[string]int32{
	"WKB": 0,
}

func (x Feature_GeomSerialization) String() string {
	return proto.EnumName(Feature_GeomSerialization_name, int32(x))
}
func (Feature_GeomSerialization) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{2, 1} }

type Tag_ValueType int32

const (
	Tag_STRING Tag_ValueType = 0
	Tag_INT    Tag_ValueType = 1
	Tag_DOUBLE Tag_ValueType = 2
)

var Tag_ValueType_name = map[int32]string{
	0: "STRING",
	1: "INT",
	2: "DOUBLE",
}
var Tag_ValueType_value = map[string]int32{
	"STRING": 0,
	"INT":    1,
	"DOUBLE": 2,
}

func (x Tag_ValueType) String() string {
	return proto.EnumName(Tag_ValueType_name, int32(x))
}
func (Tag_ValueType) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{3, 0} }

type Body struct {
	Meta    *Meta      `protobuf:"bytes,1,opt,name=meta" json:"meta,omitempty"`
	Feature []*Feature `protobuf:"bytes,2,rep,name=feature" json:"feature,omitempty"`
}

func (m *Body) Reset()                    { *m = Body{} }
func (m *Body) String() string            { return proto.CompactTextString(m) }
func (*Body) ProtoMessage()               {}
func (*Body) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Body) GetMeta() *Meta {
	if m != nil {
		return m.Meta
	}
	return nil
}

func (m *Body) GetFeature() []*Feature {
	if m != nil {
		return m.Feature
	}
	return nil
}

type Meta struct {
	Tags []*Tag `protobuf:"bytes,1,rep,name=tags" json:"tags,omitempty"`
}

func (m *Meta) Reset()                    { *m = Meta{} }
func (m *Meta) String() string            { return proto.CompactTextString(m) }
func (*Meta) ProtoMessage()               {}
func (*Meta) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *Meta) GetTags() []*Tag {
	if m != nil {
		return m.Tags
	}
	return nil
}

type Feature struct {
	Geomtype   Feature_GeomType          `protobuf:"varint,1,opt,name=geomtype,enum=Feature_GeomType" json:"geomtype,omitempty"`
	Geomserial Feature_GeomSerialization `protobuf:"varint,2,opt,name=geomserial,enum=Feature_GeomSerialization" json:"geomserial,omitempty"`
	Geom       []byte                    `protobuf:"bytes,3,opt,name=geom,proto3" json:"geom,omitempty"`
	// geometry bbox
	Left   float64 `protobuf:"fixed64,4,opt,name=left" json:"left,omitempty"`
	Right  float64 `protobuf:"fixed64,5,opt,name=right" json:"right,omitempty"`
	Top    float64 `protobuf:"fixed64,6,opt,name=top" json:"top,omitempty"`
	Bottom float64 `protobuf:"fixed64,7,opt,name=bottom" json:"bottom,omitempty"`
	Tags   []*Tag  `protobuf:"bytes,8,rep,name=tags" json:"tags,omitempty"`
}

func (m *Feature) Reset()                    { *m = Feature{} }
func (m *Feature) String() string            { return proto.CompactTextString(m) }
func (*Feature) ProtoMessage()               {}
func (*Feature) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *Feature) GetGeomtype() Feature_GeomType {
	if m != nil {
		return m.Geomtype
	}
	return Feature_UNKNOWN
}

func (m *Feature) GetGeomserial() Feature_GeomSerialization {
	if m != nil {
		return m.Geomserial
	}
	return Feature_WKB
}

func (m *Feature) GetGeom() []byte {
	if m != nil {
		return m.Geom
	}
	return nil
}

func (m *Feature) GetLeft() float64 {
	if m != nil {
		return m.Left
	}
	return 0
}

func (m *Feature) GetRight() float64 {
	if m != nil {
		return m.Right
	}
	return 0
}

func (m *Feature) GetTop() float64 {
	if m != nil {
		return m.Top
	}
	return 0
}

func (m *Feature) GetBottom() float64 {
	if m != nil {
		return m.Bottom
	}
	return 0
}

func (m *Feature) GetTags() []*Tag {
	if m != nil {
		return m.Tags
	}
	return nil
}

type Tag struct {
	Key   string        `protobuf:"bytes,1,opt,name=key" json:"key,omitempty"`
	Value []byte        `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	Type  Tag_ValueType `protobuf:"varint,3,opt,name=type,enum=Tag_ValueType" json:"type,omitempty"`
}

func (m *Tag) Reset()                    { *m = Tag{} }
func (m *Tag) String() string            { return proto.CompactTextString(m) }
func (*Tag) ProtoMessage()               {}
func (*Tag) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *Tag) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *Tag) GetValue() []byte {
	if m != nil {
		return m.Value
	}
	return nil
}

func (m *Tag) GetType() Tag_ValueType {
	if m != nil {
		return m.Type
	}
	return Tag_STRING
}

func init() {
	proto.RegisterType((*Body)(nil), "Body")
	proto.RegisterType((*Meta)(nil), "Meta")
	proto.RegisterType((*Feature)(nil), "Feature")
	proto.RegisterType((*Tag)(nil), "Tag")
	proto.RegisterEnum("Feature_GeomType", Feature_GeomType_name, Feature_GeomType_value)
	proto.RegisterEnum("Feature_GeomSerialization", Feature_GeomSerialization_name, Feature_GeomSerialization_value)
	proto.RegisterEnum("Tag_ValueType", Tag_ValueType_name, Tag_ValueType_value)
}

func init() { proto.RegisterFile("fileformat.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 394 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x64, 0x52, 0xc1, 0x6e, 0xd3, 0x40,
	0x10, 0x8d, 0xed, 0x8d, 0xed, 0x4c, 0xaa, 0x6a, 0x3b, 0x42, 0x68, 0x41, 0x1c, 0xac, 0x3d, 0xe5,
	0x00, 0x3e, 0x84, 0x13, 0x1c, 0x23, 0x42, 0x14, 0x35, 0xd8, 0xd5, 0xd6, 0xa5, 0xe2, 0xb8, 0x15,
	0x1b, 0x63, 0x11, 0xb3, 0x96, 0xbb, 0x45, 0x32, 0x17, 0x3e, 0x91, 0x5f, 0x42, 0x3b, 0x6e, 0x22,
	0x50, 0x6f, 0xef, 0xbd, 0x99, 0xe7, 0x9d, 0xf7, 0x64, 0xe0, 0xfb, 0xe6, 0x60, 0xf6, 0xb6, 0x6f,
	0xb5, 0xcb, 0xbb, 0xde, 0x3a, 0x2b, 0xd7, 0xc0, 0x56, 0xf6, 0xeb, 0x80, 0x2f, 0x80, 0xb5, 0xc6,
	0x69, 0x11, 0x64, 0xc1, 0x62, 0xbe, 0x9c, 0xe6, 0x9f, 0x8c, 0xd3, 0x8a, 0x24, 0x94, 0x90, 0xec,
	0x8d, 0x76, 0x0f, 0xbd, 0x11, 0x61, 0x16, 0x2d, 0xe6, 0xcb, 0x34, 0xff, 0x38, 0x72, 0x75, 0x1c,
	0xc8, 0x0c, 0x98, 0x77, 0xa0, 0x00, 0xe6, 0x74, 0x7d, 0x2f, 0x02, 0x5a, 0x64, 0x79, 0xa5, 0x6b,
	0x45, 0x8a, 0xfc, 0x13, 0x42, 0xf2, 0x68, 0xc3, 0x37, 0x90, 0xd6, 0xc6, 0xb6, 0x6e, 0xe8, 0x0c,
	0x3d, 0x78, 0xbe, 0xbc, 0x38, 0x7e, 0x32, 0xdf, 0x18, 0xdb, 0x56, 0x43, 0x67, 0xd4, 0x69, 0x05,
	0xdf, 0x03, 0x78, 0x7c, 0x6f, 0xfa, 0x46, 0x1f, 0x44, 0x48, 0x86, 0x97, 0xff, 0x19, 0xae, 0x69,
	0xd4, 0xfc, 0xd2, 0xae, 0xb1, 0x3f, 0xd4, 0x3f, 0xdb, 0x88, 0xc0, 0x3c, 0x13, 0x51, 0x16, 0x2c,
	0xce, 0x14, 0x61, 0xaf, 0x1d, 0xcc, 0xde, 0x09, 0x96, 0x05, 0x8b, 0x40, 0x11, 0xc6, 0x67, 0x30,
	0xed, 0x9b, 0xfa, 0x9b, 0x13, 0x53, 0x12, 0x47, 0x82, 0x1c, 0x22, 0x67, 0x3b, 0x11, 0x93, 0xe6,
	0x21, 0x3e, 0x87, 0xf8, 0xce, 0x3a, 0x67, 0x5b, 0x91, 0x90, 0xf8, 0xc8, 0x4e, 0xc1, 0xd3, 0x27,
	0xc1, 0xdf, 0x41, 0x7a, 0xcc, 0x84, 0x73, 0x48, 0x6e, 0x8a, 0xcb, 0xa2, 0xbc, 0x2d, 0xf8, 0x04,
	0x67, 0x30, 0xbd, 0x2a, 0xb7, 0x45, 0xc5, 0x03, 0x4c, 0x81, 0xed, 0xb6, 0xc5, 0x9a, 0x87, 0x7e,
	0xe3, 0xaa, 0xdc, 0x7d, 0xd9, 0x94, 0x05, 0x8f, 0xe4, 0x2b, 0xb8, 0x78, 0x92, 0x0e, 0x13, 0x88,
	0x6e, 0x2f, 0x57, 0x7c, 0x22, 0x7f, 0x43, 0x54, 0xe9, 0xda, 0xdf, 0xf8, 0xdd, 0x0c, 0xd4, 0xe3,
	0x4c, 0x79, 0xe8, 0xb3, 0xfc, 0xd4, 0x87, 0x07, 0x43, 0x55, 0x9d, 0xa9, 0x91, 0xa0, 0x04, 0x46,
	0x85, 0x47, 0xd4, 0xdf, 0xb9, 0xbf, 0x30, 0xff, 0xec, 0x27, 0xd4, 0x36, 0xcd, 0xe4, 0x6b, 0x98,
	0x9d, 0x24, 0x04, 0x88, 0xaf, 0x2b, 0xb5, 0x2d, 0x36, 0x7c, 0xe2, 0x1f, 0x1d, 0x2f, 0x05, 0x88,
	0x3f, 0x94, 0x37, 0xab, 0xdd, 0x9a, 0x87, 0x77, 0x31, 0xfd, 0x42, 0x6f, 0xff, 0x06, 0x00, 0x00,
	0xff, 0xff, 0x36, 0x98, 0xb9, 0x99, 0x56, 0x02, 0x00, 0x00,
}
